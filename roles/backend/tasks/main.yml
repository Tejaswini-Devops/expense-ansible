- name: Disable existing nodejs
  ansible.builtin.shell:
    cmd: dnf module disable nodejs -y

- name: Enable Latest version of nodejs
  ansible.builtin.shell:
    cmd: dnf module enable nodejs:20 -y

- name: Install Nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: Configure Backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Adding the Application User
  ansible.builtin.user:
    name: expense

- name: App Pre-Requisties
  ansible.builtin.include_role:
    name: common
    tasks_from: app_prereq

- name: Install Dependencies.
  community.general.npm:
    path: /app

- name: Reloading systemD and Enable and start services
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Install mysql client and Python
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: installed
  loop:
    - mysql
    - python3-PyMySQL


- name: load schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: "{{ lookup('amazon.aws.aws_ssm', env ~ '.expense.rds.username', region='us-east-1') }}"
    login_password: "{{ lookup('amazon.aws.aws_ssm', env ~ '.expense.rds.password', region='us-east-1') }}"
    login_host: "{{ lookup('amazon.aws.aws_ssm', env ~ '.expense.rds.endpoint', region='us-east-1') }}"

#    loading the schema into newly created rds